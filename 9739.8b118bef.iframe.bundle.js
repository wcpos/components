(self.webpackChunk_wcpos_components=self.webpackChunk_wcpos_components||[]).push([[9739],{"./src/combobox/combobox.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WithLabel=exports.BasicUsage=void 0;var _BasicUsage$parameter,_BasicUsage$parameter2,_BasicUsage$parameter3,_WithLabel$parameters,_WithLabel$parameters2,_WithLabel$parameters3,_slicedToArray2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/slicedToArray.js")),React=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./node_modules/react/index.js")),_reactNativeSafeAreaContext=__webpack_require__("./node_modules/react-native-safe-area-context/lib/module/index.js"),_combobox=__webpack_require__("./src/combobox/combobox.tsx"),_withLabel=__webpack_require__("./src/combobox/with-label.tsx"),_portal=_interopRequireDefault(__webpack_require__("./src/portal/index.ts")),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var meta={title:"Components/Combobox",component:_combobox.Combobox,decorators:[function AppProvider(Story,context){return(0,_jsxRuntime.jsx)(_reactNativeSafeAreaContext.SafeAreaProvider,{children:(0,_jsxRuntime.jsxs)(_portal.default.Provider,{children:[(0,_jsxRuntime.jsx)(Story,Object.assign({},context)),(0,_jsxRuntime.jsx)(_portal.default.Manager,{})]})})}]},BasicUsage=function BasicUsage(props){var _React$useState=React.useState(props.value),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),selected=_React$useState2[0],setSelected=_React$useState2[1];return(0,_jsxRuntime.jsx)(_combobox.Combobox,Object.assign({},props,{value:selected,onChange:setSelected}))};exports.BasicUsage=BasicUsage,BasicUsage.args={value:null,placeholder:"Select a color",options:[{label:"Blue",value:"blue"},{label:"Red",value:"red"},{label:"Green",value:"green"},{label:"Yellow",value:"yellow"}]};var WithLabel=function WithLabel(props){var _React$useState3=React.useState(props.value),_React$useState4=(0,_slicedToArray2.default)(_React$useState3,2),selected=_React$useState4[0],setSelected=_React$useState4[1];return(0,_jsxRuntime.jsx)(_withLabel.ComboboxWithLabel,Object.assign({},props,{value:selected,onChange:setSelected}))};exports.WithLabel=WithLabel,WithLabel.args={label:"Select your favorite color",value:null,placeholder:"Select a color",helpText:"Colors are displayed in neutral color, in case you are color blind.",error:"Error message",options:[{label:"Blue",value:"blue"},{label:"Red",value:"red"},{label:"Green",value:"green"},{label:"Yellow",value:"yellow"}]};var _default=meta;exports.default=_default,BasicUsage.parameters=Object.assign({},BasicUsage.parameters,{docs:Object.assign({},null==(_BasicUsage$parameter=BasicUsage.parameters)?void 0:_BasicUsage$parameter.docs,{source:Object.assign({originalSource:"(props: ComboboxProps) => {\n  const [selected, setSelected] = React.useState(props.value);\n  return <Combobox {...props} value={selected} onChange={setSelected} />;\n}"},null==(_BasicUsage$parameter2=BasicUsage.parameters)||null==(_BasicUsage$parameter3=_BasicUsage$parameter2.docs)?void 0:_BasicUsage$parameter3.source)})}),WithLabel.parameters=Object.assign({},WithLabel.parameters,{docs:Object.assign({},null==(_WithLabel$parameters=WithLabel.parameters)?void 0:_WithLabel$parameters.docs,{source:Object.assign({originalSource:"(props: ComboboxWithLabelProps) => {\n  const [selected, setSelected] = React.useState(props.value);\n  return <ComboboxWithLabel {...props} value={selected} onChange={setSelected} />;\n}"},null==(_WithLabel$parameters2=WithLabel.parameters)||null==(_WithLabel$parameters3=_WithLabel$parameters2.docs)?void 0:_WithLabel$parameters3.source)})});try{BasicUsage.displayName="BasicUsage",BasicUsage.__docgenInfo={description:"",displayName:"BasicUsage",props:{options:{defaultValue:null,description:"Options available in the Select.",name:"options",required:!0,type:{name:"string[] | ComboboxOption[]"}},value:{defaultValue:null,description:"Currently selected value. If null, no value is selected.",name:"value",required:!1,type:{name:"string | ComboboxOption | null"}},onChange:{defaultValue:null,description:"Callback called when selection is changed.",name:"onChange",required:!1,type:{name:"((selected: any) => void)"}},onSearch:{defaultValue:null,description:"Callback called when selection is changed.",name:"onSearch",required:!1,type:{name:"((value: string) => void)"}},searchValue:{defaultValue:null,description:"Search term",name:"searchValue",required:!1,type:{name:"string | null"}},placeholder:{defaultValue:null,description:"Text to display as a placeholder.",name:"placeholder",required:!1,type:{name:"string"}},renderOption:{defaultValue:null,description:"Customise option display",name:"renderOption",required:!1,type:{name:"((option: ComboboxOption) => ReactNode)"}},autofocus:{defaultValue:null,description:"Autofocus so the dropdown is open and textinput is in focus",name:"autofocus",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/combobox/combobox.stories.tsx#BasicUsage"]={docgenInfo:BasicUsage.__docgenInfo,name:"BasicUsage",path:"src/combobox/combobox.stories.tsx#BasicUsage"})}catch(__react_docgen_typescript_loader_error){}try{WithLabel.displayName="WithLabel",WithLabel.__docgenInfo={description:"",displayName:"WithLabel",props:{options:{defaultValue:null,description:"Options available in the Select.",name:"options",required:!0,type:{name:"string[] | ComboboxOption[]"}},value:{defaultValue:null,description:"Currently selected value. If null, no value is selected.",name:"value",required:!1,type:{name:"string | ComboboxOption | null"}},onChange:{defaultValue:null,description:"Callback called when selection is changed.",name:"onChange",required:!1,type:{name:"((selected: any) => void)"}},onSearch:{defaultValue:null,description:"Callback called when selection is changed.",name:"onSearch",required:!1,type:{name:"((value: string) => void)"}},searchValue:{defaultValue:null,description:"Search term",name:"searchValue",required:!1,type:{name:"string | null"}},placeholder:{defaultValue:null,description:"Text to display as a placeholder.",name:"placeholder",required:!1,type:{name:"string"}},renderOption:{defaultValue:null,description:"Customise option display",name:"renderOption",required:!1,type:{name:"((option: ComboboxOption) => ReactNode)"}},autofocus:{defaultValue:null,description:"Autofocus so the dropdown is open and textinput is in focus",name:"autofocus",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Disable the input.",name:"disabled",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label shown above the input.",name:"label",required:!1,type:{name:"string"}},onLabelPress:{defaultValue:null,description:"Callback called on click of the label.",name:"onLabelPress",required:!1,type:{name:"(() => void)"}},helpText:{defaultValue:null,description:"Additional text to help the user.",name:"helpText",required:!1,type:{name:"ReactNode"}},error:{defaultValue:null,description:"Display an error state.",name:"error",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/combobox/combobox.stories.tsx#WithLabel"]={docgenInfo:WithLabel.__docgenInfo,name:"WithLabel",path:"src/combobox/combobox.stories.tsx#WithLabel"})}catch(__react_docgen_typescript_loader_error){}}}]);