(self.webpackChunk_wcpos_components=self.webpackChunk_wcpos_components||[]).push([[84939,9685,24749],{"./node_modules/@wcpos/hooks/src/use-merged-ref/assign-ref.ts":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.assignRef=function assignRef(ref,value){"function"==typeof ref?ref(value):"object"==typeof ref&&null!==ref&&"current"in ref&&(ref.current=value)}},"./node_modules/@wcpos/hooks/src/use-merged-ref/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function get(){return _useMergedRef.useMergedRef}});var _useMergedRef=__webpack_require__("./node_modules/@wcpos/hooks/src/use-merged-ref/use-merged-ref.ts")},"./node_modules/@wcpos/hooks/src/use-merged-ref/use-merged-ref.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.mergeRefs=mergeRefs,exports.useMergedRef=function useMergedRef(){for(var _len2=arguments.length,refs=new Array(_len2),_key2=0;_key2<_len2;_key2++)refs[_key2]=arguments[_key2];return React.useCallback(mergeRefs.apply(void 0,refs),refs)};var React=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./node_modules/react/index.js")),_assignRef=__webpack_require__("./node_modules/@wcpos/hooks/src/use-merged-ref/assign-ref.ts");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function mergeRefs(){for(var _len=arguments.length,refs=new Array(_len),_key=0;_key<_len;_key++)refs[_key]=arguments[_key];return function(node){refs.forEach((function(ref){return(0,_assignRef.assignRef)(ref,node)}))}}},"./src/textinput/textinput.stories.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.autosize=exports.WithInputContainer=exports.WithAction=exports.Uncontrolled=exports.IntegerWithPrefix=exports.Clearable=exports.BasicUsage=void 0;var _BasicUsage$parameter,_BasicUsage$parameter2,_BasicUsage$parameter3,_WithInputContainer$p,_WithInputContainer$p2,_WithInputContainer$p3,_WithAction$parameter,_WithAction$parameter2,_WithAction$parameter3,_IntegerWithPrefix$pa,_IntegerWithPrefix$pa2,_IntegerWithPrefix$pa3,_Clearable$parameters,_Clearable$parameters2,_Clearable$parameters3,_autosize$parameters,_autosize$parameters2,_autosize$parameters3,_Uncontrolled$paramet,_Uncontrolled$paramet2,_Uncontrolled$paramet3,_slicedToArray2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/slicedToArray.js")),React=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./node_modules/react/index.js")),_addonActions=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js"),_native=__webpack_require__("./node_modules/styled-components/native/dist/styled-components.native.esm.js"),_textinput=__webpack_require__("./src/textinput/textinput.tsx"),_withLabel=__webpack_require__("./src/textinput/with-label.tsx"),_button=_interopRequireDefault(__webpack_require__("./src/button/index.ts")),_portal=_interopRequireDefault(__webpack_require__("./src/portal/index.ts")),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var meta={title:"Components/TextInput",component:_textinput.TextInput,subcomponents:{TextInputWithLabel:_withLabel.TextInputWithLabel}},BasicUsage=function BasicUsage(props){var _React$useState=React.useState(props.value||""),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),value=_React$useState2[0],setValue=_React$useState2[1];return(0,_jsxRuntime.jsx)(_textinput.TextInput,Object.assign({value,onChange:function onTextChanged(newText){setValue(newText),(0,_addonActions.action)("Text changed")(newText)}},props))};exports.BasicUsage=BasicUsage,BasicUsage.args={placeholder:"Placeholder Text",returnKeyType:"done",onFocus:(0,_addonActions.action)("Focused"),onBlur:(0,_addonActions.action)("Blurred"),onSubmit:(0,_addonActions.action)("Submitted"),onKeyPress:(0,_addonActions.action)("Key Pressed")};var WithInputContainer=function WithInputContainer(props){return(0,_jsxRuntime.jsx)(_withLabel.TextInputWithLabel,Object.assign({},props))};exports.WithInputContainer=WithInputContainer,WithInputContainer.args={label:"Label",placeholder:"Placeholder Text",returnKeyType:"done",helpText:"Help Text meant to help you",error:"Error Text meant to help you",onLabelPress:(0,_addonActions.action)("Label pressed")};var WithAction=function WithAction(props){var _React$useState3=React.useState(!1),_React$useState4=(0,_slicedToArray2.default)(_React$useState3,2),loading=_React$useState4[0],setLoading=_React$useState4[1];(0,_native.useTheme)();return(0,_jsxRuntime.jsx)(_textinput.TextInput,Object.assign({},props,{rightAccessory:(0,_jsxRuntime.jsx)(_button.default,{title:"Submit",onPress:function onPress(){return setLoading(!0)},style:{borderTopLeftRadius:0,borderBottomLeftRadius:0,borderTopRightRadius:3,borderBottomRightRadius:3},loading})}))};exports.WithAction=WithAction;var IntegerWithPrefix=function IntegerWithPrefix(props){var _React$useState5=React.useState(""),_React$useState6=(0,_slicedToArray2.default)(_React$useState5,2),value=_React$useState6[0];_React$useState6[1];return(0,_jsxRuntime.jsx)(_textinput.TextInput,Object.assign({},props,{value}))};exports.IntegerWithPrefix=IntegerWithPrefix,IntegerWithPrefix.args={label:"Amount",type:"integer",prefix:"$",placeholder:"10",returnKeyType:"done",onChange:(0,_addonActions.action)("Text changed")};var Clearable=function Clearable(props){return(0,_jsxRuntime.jsx)(_textinput.TextInput,Object.assign({},props,{clearable:!0}))};exports.Clearable=Clearable;var autosize=function autosize(props){return(0,_jsxRuntime.jsxs)(_portal.default.Provider,{children:[(0,_jsxRuntime.jsx)(_textinput.TextInput,Object.assign({autosize:!0},props)),(0,_jsxRuntime.jsx)(_portal.default.Manager,{})]})};exports.autosize=autosize;var Uncontrolled=function Uncontrolled(props){return(0,_jsxRuntime.jsx)(_textinput.TextInput,Object.assign({},props))};exports.Uncontrolled=Uncontrolled;var _default=meta;exports.default=_default,BasicUsage.parameters=Object.assign({},BasicUsage.parameters,{docs:Object.assign({},null==(_BasicUsage$parameter=BasicUsage.parameters)?void 0:_BasicUsage$parameter.docs,{source:Object.assign({originalSource:"(props: TextInputProps) => {\n  const [value, setValue] = React.useState(props.value || '');\n  const onTextChanged = (newText: string): void => {\n    setValue(newText);\n    action('Text changed')(newText);\n  };\n  return <TextInput value={value} onChange={onTextChanged} {...props} />;\n}"},null==(_BasicUsage$parameter2=BasicUsage.parameters)||null==(_BasicUsage$parameter3=_BasicUsage$parameter2.docs)?void 0:_BasicUsage$parameter3.source)})}),WithInputContainer.parameters=Object.assign({},WithInputContainer.parameters,{docs:Object.assign({},null==(_WithInputContainer$p=WithInputContainer.parameters)?void 0:_WithInputContainer$p.docs,{source:Object.assign({originalSource:"(props: TextInputWithLabelProps) => {\n  return <TextInputWithLabel {...props} />;\n}"},null==(_WithInputContainer$p2=WithInputContainer.parameters)||null==(_WithInputContainer$p3=_WithInputContainer$p2.docs)?void 0:_WithInputContainer$p3.source)})}),WithAction.parameters=Object.assign({},WithAction.parameters,{docs:Object.assign({},null==(_WithAction$parameter=WithAction.parameters)?void 0:_WithAction$parameter.docs,{source:Object.assign({originalSource:'(props: TextInputProps) => {\n  const [loading, setLoading] = React.useState(false);\n  const theme = useTheme(); // FIXME: useTheme doesn\'t work here?\n\n  return <TextInput {...props} rightAccessory={<Button title="Submit" onPress={() => setLoading(true)} style={{\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    borderTopRightRadius: 3,\n    borderBottomRightRadius: 3\n  }} loading={loading} />} />;\n}'},null==(_WithAction$parameter2=WithAction.parameters)||null==(_WithAction$parameter3=_WithAction$parameter2.docs)?void 0:_WithAction$parameter3.source)})}),IntegerWithPrefix.parameters=Object.assign({},IntegerWithPrefix.parameters,{docs:Object.assign({},null==(_IntegerWithPrefix$pa=IntegerWithPrefix.parameters)?void 0:_IntegerWithPrefix$pa.docs,{source:Object.assign({originalSource:"(props: TextInputProps) => {\n  const [value, setValue] = React.useState('');\n  return <TextInput {...props} value={value} />;\n}"},null==(_IntegerWithPrefix$pa2=IntegerWithPrefix.parameters)||null==(_IntegerWithPrefix$pa3=_IntegerWithPrefix$pa2.docs)?void 0:_IntegerWithPrefix$pa3.source)})}),Clearable.parameters=Object.assign({},Clearable.parameters,{docs:Object.assign({},null==(_Clearable$parameters=Clearable.parameters)?void 0:_Clearable$parameters.docs,{source:Object.assign({originalSource:"(props: TextInputProps) => <TextInput {...props} clearable />"},null==(_Clearable$parameters2=Clearable.parameters)||null==(_Clearable$parameters3=_Clearable$parameters2.docs)?void 0:_Clearable$parameters3.source)})}),autosize.parameters=Object.assign({},autosize.parameters,{docs:Object.assign({},null==(_autosize$parameters=autosize.parameters)?void 0:_autosize$parameters.docs,{source:Object.assign({originalSource:"(props: TextInputProps) => <Portal.Provider>\n        <TextInput autosize {...props} />\n        <Portal.Manager />\n    </Portal.Provider>"},null==(_autosize$parameters2=autosize.parameters)||null==(_autosize$parameters3=_autosize$parameters2.docs)?void 0:_autosize$parameters3.source)})}),Uncontrolled.parameters=Object.assign({},Uncontrolled.parameters,{docs:Object.assign({},null==(_Uncontrolled$paramet=Uncontrolled.parameters)?void 0:_Uncontrolled$paramet.docs,{source:Object.assign({originalSource:"(props: TextInputProps) => <TextInput {...props} />"},null==(_Uncontrolled$paramet2=Uncontrolled.parameters)||null==(_Uncontrolled$paramet3=_Uncontrolled$paramet2.docs)?void 0:_Uncontrolled$paramet3.source)})});try{BasicUsage.displayName="BasicUsage",BasicUsage.__docgenInfo={description:"",displayName:"BasicUsage",props:{type:{defaultValue:null,description:"Type of the TextField.\n\nWill define a logical `autoCapitalize` value if not set.\n\nAlso defines the type of keyboard displayed and the value for autocomplete/autofill properties.",name:"type",required:!1,type:{name:"enum",value:[{value:'"text"'},{value:'"email"'},{value:'"new-password"'},{value:'"password"'},{value:'"url"'},{value:'"username"'},{value:'"first-name"'},{value:'"last-name"'},{value:'"integer"'}]}},disabled:{defaultValue:null,description:"Set to `true` to disable.",name:"disabled",required:!1,type:{name:"boolean"}},readonly:{defaultValue:null,description:"Set to `true` to disable.",name:"readonly",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Set to `true` for loading state.",name:"loading",required:!1,type:{name:"boolean"}},clearable:{defaultValue:null,description:"Set to `true` to add icon for clearing textfield.",name:"clearable",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Put input into error state.",name:"error",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"Set to `true` to focus the field and to `false` to blur it.\n\nTo initially focus this field when arriving on this screen, simply use\n\n```tsx\n<TextField focused />\n```",name:"focused",required:!1,type:{name:"boolean"}},onClear:{defaultValue:null,description:"Called when the clear icon is pressed",name:"onClear",required:!1,type:{name:"(() => void)"}},prefix:{defaultValue:null,description:"Display a prefix label on the input.",name:"prefix",required:!1,type:{name:"string"}},leftAccessory:{defaultValue:null,description:"Adds functionality to the TextInput, eg: buttons, pills, etc.",name:"leftAccessory",required:!1,type:{name:"ReactNode"}},rightAccessory:{defaultValue:null,description:"Adds functionality to the TextInput, eg: action buttons",name:"rightAccessory",required:!1,type:{name:"ReactNode"}},containerStyle:{defaultValue:null,description:"",name:"containerStyle",required:!1,type:{name:"StyleProp<TextStyle>"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"xSmall"'},{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"xLarge"'},{value:'"xxLarge"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/textinput/textinput.stories.tsx#BasicUsage"]={docgenInfo:BasicUsage.__docgenInfo,name:"BasicUsage",path:"src/textinput/textinput.stories.tsx#BasicUsage"})}catch(__react_docgen_typescript_loader_error){}try{WithInputContainer.displayName="WithInputContainer",WithInputContainer.__docgenInfo={description:"",displayName:"WithInputContainer",props:{type:{defaultValue:null,description:"Type of the TextField.\n\nWill define a logical `autoCapitalize` value if not set.\n\nAlso defines the type of keyboard displayed and the value for autocomplete/autofill properties.",name:"type",required:!1,type:{name:"enum",value:[{value:'"text"'},{value:'"email"'},{value:'"new-password"'},{value:'"password"'},{value:'"url"'},{value:'"username"'},{value:'"first-name"'},{value:'"last-name"'},{value:'"integer"'}]}},disabled:{defaultValue:null,description:"Set to `true` to disable.\nDisable the input.",name:"disabled",required:!1,type:{name:"boolean"}},readonly:{defaultValue:null,description:"Set to `true` to disable.",name:"readonly",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Set to `true` for loading state.",name:"loading",required:!1,type:{name:"boolean"}},clearable:{defaultValue:null,description:"Set to `true` to add icon for clearing textfield.",name:"clearable",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Put input into error state.\nDisplay an error state.",name:"error",required:!1,type:{name:"undefined"}},focused:{defaultValue:null,description:"Set to `true` to focus the field and to `false` to blur it.\n\nTo initially focus this field when arriving on this screen, simply use\n\n```tsx\n<TextField focused />\n```",name:"focused",required:!1,type:{name:"boolean"}},onClear:{defaultValue:null,description:"Called when the clear icon is pressed",name:"onClear",required:!1,type:{name:"(() => void)"}},prefix:{defaultValue:null,description:"Display a prefix label on the input.",name:"prefix",required:!1,type:{name:"string"}},leftAccessory:{defaultValue:null,description:"Adds functionality to the TextInput, eg: buttons, pills, etc.",name:"leftAccessory",required:!1,type:{name:"ReactNode"}},rightAccessory:{defaultValue:null,description:"Adds functionality to the TextInput, eg: action buttons",name:"rightAccessory",required:!1,type:{name:"ReactNode"}},containerStyle:{defaultValue:null,description:"",name:"containerStyle",required:!1,type:{name:"StyleProp<TextStyle>"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"xSmall"'},{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"xLarge"'},{value:'"xxLarge"'}]}},label:{defaultValue:null,description:"Label shown above the input.",name:"label",required:!1,type:{name:"string"}},onLabelPress:{defaultValue:null,description:"Callback called on click of the label.",name:"onLabelPress",required:!1,type:{name:"(() => void)"}},helpText:{defaultValue:null,description:"Additional text to help the user.",name:"helpText",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/textinput/textinput.stories.tsx#WithInputContainer"]={docgenInfo:WithInputContainer.__docgenInfo,name:"WithInputContainer",path:"src/textinput/textinput.stories.tsx#WithInputContainer"})}catch(__react_docgen_typescript_loader_error){}try{WithAction.displayName="WithAction",WithAction.__docgenInfo={description:"",displayName:"WithAction",props:{type:{defaultValue:null,description:"Type of the TextField.\n\nWill define a logical `autoCapitalize` value if not set.\n\nAlso defines the type of keyboard displayed and the value for autocomplete/autofill properties.",name:"type",required:!1,type:{name:"enum",value:[{value:'"text"'},{value:'"email"'},{value:'"new-password"'},{value:'"password"'},{value:'"url"'},{value:'"username"'},{value:'"first-name"'},{value:'"last-name"'},{value:'"integer"'}]}},disabled:{defaultValue:null,description:"Set to `true` to disable.",name:"disabled",required:!1,type:{name:"boolean"}},readonly:{defaultValue:null,description:"Set to `true` to disable.",name:"readonly",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Set to `true` for loading state.",name:"loading",required:!1,type:{name:"boolean"}},clearable:{defaultValue:null,description:"Set to `true` to add icon for clearing textfield.",name:"clearable",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Put input into error state.",name:"error",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"Set to `true` to focus the field and to `false` to blur it.\n\nTo initially focus this field when arriving on this screen, simply use\n\n```tsx\n<TextField focused />\n```",name:"focused",required:!1,type:{name:"boolean"}},onClear:{defaultValue:null,description:"Called when the clear icon is pressed",name:"onClear",required:!1,type:{name:"(() => void)"}},prefix:{defaultValue:null,description:"Display a prefix label on the input.",name:"prefix",required:!1,type:{name:"string"}},leftAccessory:{defaultValue:null,description:"Adds functionality to the TextInput, eg: buttons, pills, etc.",name:"leftAccessory",required:!1,type:{name:"ReactNode"}},rightAccessory:{defaultValue:null,description:"Adds functionality to the TextInput, eg: action buttons",name:"rightAccessory",required:!1,type:{name:"ReactNode"}},containerStyle:{defaultValue:null,description:"",name:"containerStyle",required:!1,type:{name:"StyleProp<TextStyle>"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"xSmall"'},{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"xLarge"'},{value:'"xxLarge"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/textinput/textinput.stories.tsx#WithAction"]={docgenInfo:WithAction.__docgenInfo,name:"WithAction",path:"src/textinput/textinput.stories.tsx#WithAction"})}catch(__react_docgen_typescript_loader_error){}try{IntegerWithPrefix.displayName="IntegerWithPrefix",IntegerWithPrefix.__docgenInfo={description:"",displayName:"IntegerWithPrefix",props:{type:{defaultValue:null,description:"Type of the TextField.\n\nWill define a logical `autoCapitalize` value if not set.\n\nAlso defines the type of keyboard displayed and the value for autocomplete/autofill properties.",name:"type",required:!1,type:{name:"enum",value:[{value:'"text"'},{value:'"email"'},{value:'"new-password"'},{value:'"password"'},{value:'"url"'},{value:'"username"'},{value:'"first-name"'},{value:'"last-name"'},{value:'"integer"'}]}},disabled:{defaultValue:null,description:"Set to `true` to disable.",name:"disabled",required:!1,type:{name:"boolean"}},readonly:{defaultValue:null,description:"Set to `true` to disable.",name:"readonly",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Set to `true` for loading state.",name:"loading",required:!1,type:{name:"boolean"}},clearable:{defaultValue:null,description:"Set to `true` to add icon for clearing textfield.",name:"clearable",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Put input into error state.",name:"error",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"Set to `true` to focus the field and to `false` to blur it.\n\nTo initially focus this field when arriving on this screen, simply use\n\n```tsx\n<TextField focused />\n```",name:"focused",required:!1,type:{name:"boolean"}},onClear:{defaultValue:null,description:"Called when the clear icon is pressed",name:"onClear",required:!1,type:{name:"(() => void)"}},prefix:{defaultValue:null,description:"Display a prefix label on the input.",name:"prefix",required:!1,type:{name:"string"}},leftAccessory:{defaultValue:null,description:"Adds functionality to the TextInput, eg: buttons, pills, etc.",name:"leftAccessory",required:!1,type:{name:"ReactNode"}},rightAccessory:{defaultValue:null,description:"Adds functionality to the TextInput, eg: action buttons",name:"rightAccessory",required:!1,type:{name:"ReactNode"}},containerStyle:{defaultValue:null,description:"",name:"containerStyle",required:!1,type:{name:"StyleProp<TextStyle>"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"xSmall"'},{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"xLarge"'},{value:'"xxLarge"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/textinput/textinput.stories.tsx#IntegerWithPrefix"]={docgenInfo:IntegerWithPrefix.__docgenInfo,name:"IntegerWithPrefix",path:"src/textinput/textinput.stories.tsx#IntegerWithPrefix"})}catch(__react_docgen_typescript_loader_error){}try{Clearable.displayName="Clearable",Clearable.__docgenInfo={description:"",displayName:"Clearable",props:{type:{defaultValue:null,description:"Type of the TextField.\n\nWill define a logical `autoCapitalize` value if not set.\n\nAlso defines the type of keyboard displayed and the value for autocomplete/autofill properties.",name:"type",required:!1,type:{name:"enum",value:[{value:'"text"'},{value:'"email"'},{value:'"new-password"'},{value:'"password"'},{value:'"url"'},{value:'"username"'},{value:'"first-name"'},{value:'"last-name"'},{value:'"integer"'}]}},disabled:{defaultValue:null,description:"Set to `true` to disable.",name:"disabled",required:!1,type:{name:"boolean"}},readonly:{defaultValue:null,description:"Set to `true` to disable.",name:"readonly",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Set to `true` for loading state.",name:"loading",required:!1,type:{name:"boolean"}},clearable:{defaultValue:null,description:"Set to `true` to add icon for clearing textfield.",name:"clearable",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Put input into error state.",name:"error",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"Set to `true` to focus the field and to `false` to blur it.\n\nTo initially focus this field when arriving on this screen, simply use\n\n```tsx\n<TextField focused />\n```",name:"focused",required:!1,type:{name:"boolean"}},onClear:{defaultValue:null,description:"Called when the clear icon is pressed",name:"onClear",required:!1,type:{name:"(() => void)"}},prefix:{defaultValue:null,description:"Display a prefix label on the input.",name:"prefix",required:!1,type:{name:"string"}},leftAccessory:{defaultValue:null,description:"Adds functionality to the TextInput, eg: buttons, pills, etc.",name:"leftAccessory",required:!1,type:{name:"ReactNode"}},rightAccessory:{defaultValue:null,description:"Adds functionality to the TextInput, eg: action buttons",name:"rightAccessory",required:!1,type:{name:"ReactNode"}},containerStyle:{defaultValue:null,description:"",name:"containerStyle",required:!1,type:{name:"StyleProp<TextStyle>"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"xSmall"'},{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"xLarge"'},{value:'"xxLarge"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/textinput/textinput.stories.tsx#Clearable"]={docgenInfo:Clearable.__docgenInfo,name:"Clearable",path:"src/textinput/textinput.stories.tsx#Clearable"})}catch(__react_docgen_typescript_loader_error){}try{autosize.displayName="autosize",autosize.__docgenInfo={description:"",displayName:"autosize",props:{type:{defaultValue:null,description:"Type of the TextField.\n\nWill define a logical `autoCapitalize` value if not set.\n\nAlso defines the type of keyboard displayed and the value for autocomplete/autofill properties.",name:"type",required:!1,type:{name:"enum",value:[{value:'"text"'},{value:'"email"'},{value:'"new-password"'},{value:'"password"'},{value:'"url"'},{value:'"username"'},{value:'"first-name"'},{value:'"last-name"'},{value:'"integer"'}]}},disabled:{defaultValue:null,description:"Set to `true` to disable.",name:"disabled",required:!1,type:{name:"boolean"}},readonly:{defaultValue:null,description:"Set to `true` to disable.",name:"readonly",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Set to `true` for loading state.",name:"loading",required:!1,type:{name:"boolean"}},clearable:{defaultValue:null,description:"Set to `true` to add icon for clearing textfield.",name:"clearable",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Put input into error state.",name:"error",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"Set to `true` to focus the field and to `false` to blur it.\n\nTo initially focus this field when arriving on this screen, simply use\n\n```tsx\n<TextField focused />\n```",name:"focused",required:!1,type:{name:"boolean"}},onClear:{defaultValue:null,description:"Called when the clear icon is pressed",name:"onClear",required:!1,type:{name:"(() => void)"}},prefix:{defaultValue:null,description:"Display a prefix label on the input.",name:"prefix",required:!1,type:{name:"string"}},leftAccessory:{defaultValue:null,description:"Adds functionality to the TextInput, eg: buttons, pills, etc.",name:"leftAccessory",required:!1,type:{name:"ReactNode"}},rightAccessory:{defaultValue:null,description:"Adds functionality to the TextInput, eg: action buttons",name:"rightAccessory",required:!1,type:{name:"ReactNode"}},containerStyle:{defaultValue:null,description:"",name:"containerStyle",required:!1,type:{name:"StyleProp<TextStyle>"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"xSmall"'},{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"xLarge"'},{value:'"xxLarge"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/textinput/textinput.stories.tsx#autosize"]={docgenInfo:autosize.__docgenInfo,name:"autosize",path:"src/textinput/textinput.stories.tsx#autosize"})}catch(__react_docgen_typescript_loader_error){}try{Uncontrolled.displayName="Uncontrolled",Uncontrolled.__docgenInfo={description:"",displayName:"Uncontrolled",props:{type:{defaultValue:null,description:"Type of the TextField.\n\nWill define a logical `autoCapitalize` value if not set.\n\nAlso defines the type of keyboard displayed and the value for autocomplete/autofill properties.",name:"type",required:!1,type:{name:"enum",value:[{value:'"text"'},{value:'"email"'},{value:'"new-password"'},{value:'"password"'},{value:'"url"'},{value:'"username"'},{value:'"first-name"'},{value:'"last-name"'},{value:'"integer"'}]}},disabled:{defaultValue:null,description:"Set to `true` to disable.",name:"disabled",required:!1,type:{name:"boolean"}},readonly:{defaultValue:null,description:"Set to `true` to disable.",name:"readonly",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Set to `true` for loading state.",name:"loading",required:!1,type:{name:"boolean"}},clearable:{defaultValue:null,description:"Set to `true` to add icon for clearing textfield.",name:"clearable",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Put input into error state.",name:"error",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"Set to `true` to focus the field and to `false` to blur it.\n\nTo initially focus this field when arriving on this screen, simply use\n\n```tsx\n<TextField focused />\n```",name:"focused",required:!1,type:{name:"boolean"}},onClear:{defaultValue:null,description:"Called when the clear icon is pressed",name:"onClear",required:!1,type:{name:"(() => void)"}},prefix:{defaultValue:null,description:"Display a prefix label on the input.",name:"prefix",required:!1,type:{name:"string"}},leftAccessory:{defaultValue:null,description:"Adds functionality to the TextInput, eg: buttons, pills, etc.",name:"leftAccessory",required:!1,type:{name:"ReactNode"}},rightAccessory:{defaultValue:null,description:"Adds functionality to the TextInput, eg: action buttons",name:"rightAccessory",required:!1,type:{name:"ReactNode"}},containerStyle:{defaultValue:null,description:"",name:"containerStyle",required:!1,type:{name:"StyleProp<TextStyle>"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"xSmall"'},{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"xLarge"'},{value:'"xxLarge"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/textinput/textinput.stories.tsx#Uncontrolled"]={docgenInfo:Uncontrolled.__docgenInfo,name:"Uncontrolled",path:"src/textinput/textinput.stories.tsx#Uncontrolled"})}catch(__react_docgen_typescript_loader_error){}},"./src/form-layout/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"InputWithLabel",{enumerable:!0,get:function get(){return _inputWithLabel.InputWithLabel}});var _inputWithLabel=__webpack_require__("./src/form-layout/input-with-label.tsx")},"./src/form-layout/input-with-label.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.InputWithLabel=void 0;_interopRequireDefault(__webpack_require__("./node_modules/react/index.js"));var _TouchableWithoutFeedback=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/TouchableWithoutFeedback/index.js")),_box=_interopRequireDefault(__webpack_require__("./src/box/index.ts")),_inlineError=_interopRequireDefault(__webpack_require__("./src/inline-error/index.ts")),_text=_interopRequireDefault(__webpack_require__("./src/text/index.ts")),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js"),InputWithLabel=function InputWithLabel(_ref){var label=_ref.label,error=_ref.error,helpText=_ref.helpText,disabled=_ref.disabled,children=_ref.children,onLabelPress=_ref.onLabelPress;return(0,_jsxRuntime.jsxs)(_box.default,{space:"xSmall",children:[label&&(0,_jsxRuntime.jsx)(_TouchableWithoutFeedback.default,{onPress:onLabelPress,disabled,children:(0,_jsxRuntime.jsx)(_box.default,{children:(0,_jsxRuntime.jsx)(_text.default,{uppercase:!0,size:"small",numberOfLines:1,type:"textMuted",children:label})})}),children,error&&(0,_jsxRuntime.jsx)(_box.default,{children:(0,_jsxRuntime.jsx)(_inlineError.default,{size:"small",message:"string"==typeof error?error:""})}),helpText&&(0,_jsxRuntime.jsx)(_box.default,{children:(0,_jsxRuntime.jsx)(_text.default,{type:"secondary",size:"small",children:helpText})})]})};exports.InputWithLabel=InputWithLabel;try{InputWithLabel.displayName="InputWithLabel",InputWithLabel.__docgenInfo={description:"Wraps a basic Input field with label, helpText and error features.",displayName:"InputWithLabel",props:{label:{defaultValue:null,description:"Label shown above the input.",name:"label",required:!1,type:{name:"string"}},onLabelPress:{defaultValue:null,description:"Callback called on click of the label.",name:"onLabelPress",required:!1,type:{name:"(() => void)"}},helpText:{defaultValue:null,description:"Additional text to help the user.",name:"helpText",required:!1,type:{name:"ReactNode"}},error:{defaultValue:null,description:"Display an error state.",name:"error",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Disable the input.",name:"disabled",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"TextInput component.",name:"children",required:!0,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/form-layout/input-with-label.tsx#InputWithLabel"]={docgenInfo:InputWithLabel.__docgenInfo,name:"InputWithLabel",path:"src/form-layout/input-with-label.tsx#InputWithLabel"})}catch(__react_docgen_typescript_loader_error){}},"./src/inline-error/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function get(){return _inlineError.InlineError}});var _inlineError=__webpack_require__("./src/inline-error/inline-error.tsx")},"./src/inline-error/inline-error.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.InlineError=void 0;_interopRequireDefault(__webpack_require__("./node_modules/react/index.js"));var _box=_interopRequireDefault(__webpack_require__("./src/box/index.ts")),_icon=_interopRequireDefault(__webpack_require__("./src/icon/index.ts")),_text=_interopRequireDefault(__webpack_require__("./src/text/index.ts")),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js"),InlineError=function InlineError(_ref){var message=_ref.message,_ref$size=_ref.size,size=void 0===_ref$size?"normal":_ref$size;return(0,_jsxRuntime.jsxs)(_box.default,{horizontal:!0,space:"xSmall",align:"center",children:[(0,_jsxRuntime.jsx)(_icon.default,{name:"triangleExclamation",type:"critical",size}),(0,_jsxRuntime.jsx)(_text.default,{type:"critical",size,children:message})]})};exports.InlineError=InlineError;try{InlineError.displayName="InlineError",InlineError.__docgenInfo={description:"",displayName:"InlineError",props:{message:{defaultValue:null,description:"Error message.",name:"message",required:!0,type:{name:"string"}},size:{defaultValue:{value:"normal"},description:"Size",name:"size",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"xSmall"'},{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"xLarge"'},{value:'"xxLarge"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/inline-error/inline-error.tsx#InlineError"]={docgenInfo:InlineError.__docgenInfo,name:"InlineError",path:"src/inline-error/inline-error.tsx#InlineError"})}catch(__react_docgen_typescript_loader_error){}},"./src/textinput/with-label.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.TextInputWithLabel=void 0;var _objectWithoutProperties2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),React=function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__("./node_modules/react/index.js")),_useMergedRef=_interopRequireDefault(__webpack_require__("./node_modules/@wcpos/hooks/src/use-merged-ref/index.ts")),_textinput=__webpack_require__("./src/textinput/textinput.tsx"),_formLayout=__webpack_require__("./src/form-layout/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["label","helpText","error","onLabelPress"];function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}var TextInputWithLabel=React.forwardRef((function(_ref,ref){var label=_ref.label,helpText=_ref.helpText,error=_ref.error,onLabelPress=_ref.onLabelPress,props=(0,_objectWithoutProperties2.default)(_ref,_excluded),mergedRef=(0,_useMergedRef.default)(React.useRef(null),ref),handleLabelPress=React.useCallback((function(){var _mergedRef$current;null==(_mergedRef$current=mergedRef.current)||_mergedRef$current.focus(),onLabelPress&&onLabelPress()}),[mergedRef,onLabelPress]);return(0,_jsxRuntime.jsx)(_formLayout.InputWithLabel,{label,helpText,error,onLabelPress:handleLabelPress,children:(0,_jsxRuntime.jsx)(_textinput.TextInput,Object.assign({},props,{ref:mergedRef}))})}));exports.TextInputWithLabel=TextInputWithLabel;try{TextInputWithLabel.displayName="TextInputWithLabel",TextInputWithLabel.__docgenInfo={description:"",displayName:"TextInputWithLabel",props:{type:{defaultValue:null,description:"Type of the TextField.\n\nWill define a logical `autoCapitalize` value if not set.\n\nAlso defines the type of keyboard displayed and the value for autocomplete/autofill properties.",name:"type",required:!1,type:{name:"enum",value:[{value:'"text"'},{value:'"email"'},{value:'"new-password"'},{value:'"password"'},{value:'"url"'},{value:'"username"'},{value:'"first-name"'},{value:'"last-name"'},{value:'"integer"'}]}},disabled:{defaultValue:null,description:"Set to `true` to disable.\nDisable the input.",name:"disabled",required:!1,type:{name:"boolean"}},readonly:{defaultValue:null,description:"Set to `true` to disable.",name:"readonly",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Set to `true` for loading state.",name:"loading",required:!1,type:{name:"boolean"}},clearable:{defaultValue:null,description:"Set to `true` to add icon for clearing textfield.",name:"clearable",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Put input into error state.\nDisplay an error state.",name:"error",required:!1,type:{name:"undefined"}},focused:{defaultValue:null,description:"Set to `true` to focus the field and to `false` to blur it.\n\nTo initially focus this field when arriving on this screen, simply use\n\n```tsx\n<TextField focused />\n```",name:"focused",required:!1,type:{name:"boolean"}},onClear:{defaultValue:null,description:"Called when the clear icon is pressed",name:"onClear",required:!1,type:{name:"(() => void)"}},prefix:{defaultValue:null,description:"Display a prefix label on the input.",name:"prefix",required:!1,type:{name:"string"}},leftAccessory:{defaultValue:null,description:"Adds functionality to the TextInput, eg: buttons, pills, etc.",name:"leftAccessory",required:!1,type:{name:"ReactNode"}},rightAccessory:{defaultValue:null,description:"Adds functionality to the TextInput, eg: action buttons",name:"rightAccessory",required:!1,type:{name:"ReactNode"}},containerStyle:{defaultValue:null,description:"",name:"containerStyle",required:!1,type:{name:"StyleProp<TextStyle>"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"xSmall"'},{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"xLarge"'},{value:'"xxLarge"'}]}},label:{defaultValue:null,description:"Label shown above the input.",name:"label",required:!1,type:{name:"string"}},onLabelPress:{defaultValue:null,description:"Callback called on click of the label.",name:"onLabelPress",required:!1,type:{name:"(() => void)"}},helpText:{defaultValue:null,description:"Additional text to help the user.",name:"helpText",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/textinput/with-label.tsx#TextInputWithLabel"]={docgenInfo:TextInputWithLabel.__docgenInfo,name:"TextInputWithLabel",path:"src/textinput/with-label.tsx#TextInputWithLabel"})}catch(__react_docgen_typescript_loader_error){}}}]);